const { string } = require('joi');
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const kw_products = new Schema({   
    product_image : { type: String, trim : true },
    game_logo     : { type: String, trim : true },
    product_image_alt : { type: String, trim : true },
    title : { type: String, trim : true , unique : true},
    title_slug : { type: String, trim : true },
    description : { type: String, trim : true },
    category_id : { type: Number, trim : true },
    category_name : { type: String, trim : true },
    sub_category_id : { type: Number, trim : true },
    sub_category_name : { type: String, trim : true },
    adepoints : { type: Number, trim : true },
    straight_add_on_amount : { type: String, trim : true },
    rumble_add_on_amount : { type: String, trim : true },
    reverse_add_on_amount : { type: String, trim : true },
    commingSoon : { type: String, trim : true },
    countdown_status : { type: String, trim : true },
    validuptodate : { type: Date, trim : true },
    validuptotime : { type: String, trim : true },
    lotto_type : { type: Number, trim : true },
    is_show_closing : { type: String, trim : true },
    draw_date : { type: Date, trim : true },
    draw_time : { type: String, trim : true },
    seq_order : { type: Number, trim : true },
    ticket_number_repeat : { type: String, enum : ['Y', 'N'] },
    enable_number_prefix : { type: String, enum : ['Y', 'N'] },
    lotto_range_prefix : { type: Number, trim : true },
    lotto_range_start : { type: Number, trim : true },
    lotto_range_end : { type: Number, trim : true },
    remarks : { type: String, trim : true },
    status : { type: String, enum : ['A', 'I', 'D'] , default : 'A' },
    products_id : { type: Number, trim : true },
    product_seq_id : { type: Number, trim : true },
    creation_ip : { type: String, trim : true },
    creation_date : { type: Date, trim : true },
    created_by : { type: String, trim : true },
    draw_id : { type: Number, trim : true },
    draw_oid : { type: Schema.Types.ObjectId, trim : true },
    update_date : { type: Date, trim : true },
    updated_ip : { type: String, trim : true },
    updated_by : { type: String, trim : true },
    // Game settings
    straight_game_name                : { type: String },
    rumble_game_name                  : { type: String },
    chance_game_name                  : { type: String },
    straight_settings                 : { type: String },
    rumble_settings                   : { type: String },
    chance_settings                   : { type: String },
    straight_settings_default_check   : { type: String },
    rumble_settings_default_check     : { type: String },
    chance_settings_default_check     : { type: String },
    campaign_auto_freezing_mode       : { type: String },
    campaign_freezing_start_time      : { type: String },
    campaign_freezing_end_time        : { type: String },
    game_rule_image                   : { type: String },
    game_description                  : { type: String },
    prizeData                         : { type: Schema.Types.ObjectId, trim : true },
    settingData                       : { type: Schema.Types.ObjectId, trim : true }

},{timestamps: true});

module.exports = mongoose.model('kw_products', kw_products);